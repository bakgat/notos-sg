<?php

namespace Bakgat\Notos\__CG__\Bakgat\Notos\Domain\Model\Curricula;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Structure extends \Bakgat\Notos\Domain\Model\Curricula\Structure implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'id', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'curriculum', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'name', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'parent', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'children', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'objectives', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'type');
        }

        return array('__isInitialized__', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'id', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'curriculum', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'name', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'parent', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'children', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'objectives', '' . "\0" . 'Bakgat\\Notos\\Domain\\Model\\Curricula\\Structure' . "\0" . 'type');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Structure $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function id()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'id', array());

        return parent::id();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(\Bakgat\Notos\Domain\Model\Identity\Name $name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function name()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'name', array());

        return parent::name();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurriculum(\Bakgat\Notos\Domain\Model\Curricula\Curriculum $curriculum)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurriculum', array($curriculum));

        return parent::setCurriculum($curriculum);
    }

    /**
     * {@inheritDoc}
     */
    public function curriculum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'curriculum', array());

        return parent::curriculum();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\Bakgat\Notos\Domain\Model\Curricula\Structure $parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function parent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'parent', array());

        return parent::parent();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildren($children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildren', array($children));

        return parent::setChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function children()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'children', array());

        return parent::children();
    }

    /**
     * {@inheritDoc}
     */
    public function addChild(\Bakgat\Notos\Domain\Model\Curricula\Structure $structure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChild', array($structure));

        return parent::addChild($structure);
    }

    /**
     * {@inheritDoc}
     */
    public function setObjectives(\Doctrine\Common\Collections\ArrayCollection $objectives)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObjectives', array($objectives));

        return parent::setObjectives($objectives);
    }

    /**
     * {@inheritDoc}
     */
    public function objectives()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'objectives', array());

        return parent::objectives();
    }

    /**
     * {@inheritDoc}
     */
    public function addObjective(\Bakgat\Notos\Domain\Model\Curricula\Objective $objective)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addObjective', array($objective));

        return parent::addObjective($objective);
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function type()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'type', array());

        return parent::type();
    }

}
